/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const castImmutable: typeof import('immer')['castImmutable']
  const create: typeof import('zustand')['create']
  const createRef: typeof import('react')['createRef']
  const current: typeof import('immer')['current']
  const delay: typeof import('../src/extensions/async')['delay']
  const enableMapSet: typeof import('immer')['enableMapSet']
  const fold: typeof import('../src/extensions/fp')['fold']
  const forwardRef: typeof import('react')['forwardRef']
  const get: typeof import('../src/extensions/fp')['get']
  const getLeft: typeof import('../src/extensions/fp')['getLeft']
  const getOrElse: typeof import('../src/extensions/fp')['getOrElse']
  const immerable: typeof import('immer')['immerable']
  const lazy: typeof import('react')['lazy']
  const match: typeof import('../src/extensions/fp')['match']
  const memo: typeof import('react')['memo']
  const original: typeof import('immer')['original']
  const produce: typeof import('immer')['produce']
  const queryMatch: typeof import('../src/extensions/query')['queryMatch']
  const retry: typeof import('../src/extensions/retry')['retry']
  const retryE: typeof import('../src/extensions/retry')['retryE']
  const shallow: typeof import('zustand/shallow')['shallow']
  const startTransition: typeof import('react')['startTransition']
  const to: typeof import('../src/extensions/async')['to']
  const toE: typeof import('../src/extensions/async')['toE']
  const useCallback: typeof import('react')['useCallback']
  const useContext: typeof import('react')['useContext']
  const useDebugValue: typeof import('react')['useDebugValue']
  const useDeferredValue: typeof import('react')['useDeferredValue']
  const useEffect: typeof import('react')['useEffect']
  const useId: typeof import('react')['useId']
  const useImmer: typeof import('immer')['useImmer']
  const useImperativeHandle: typeof import('react')['useImperativeHandle']
  const useInsertionEffect: typeof import('react')['useInsertionEffect']
  const useLayoutEffect: typeof import('react')['useLayoutEffect']
  const useMemo: typeof import('react')['useMemo']
  const useReducer: typeof import('react')['useReducer']
  const useRef: typeof import('react')['useRef']
  const useState: typeof import('react')['useState']
  const useSyncExternalStore: typeof import('react')['useSyncExternalStore']
  const useTransition: typeof import('react')['useTransition']
  const useTranslation: typeof import('react-i18next')['useTranslation']
}
